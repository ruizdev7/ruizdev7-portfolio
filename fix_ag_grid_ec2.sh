#!/bin/bash

# Script para diagnosticar y resolver problemas de AG Grid en EC2
# Uso: ./fix_ag_grid_ec2.sh

echo "üîß DIAGN√ìSTICO Y REPARACI√ìN DE AG GRID EN EC2"
echo "============================================="
echo ""

# 1. Verificar estado de contenedores
echo "üìã 1. VERIFICANDO ESTADO DE CONTENEDORES:"
echo "----------------------------------------"
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
echo ""

# 2. Verificar logs del frontend
echo "üìã 2. LOGS DEL FRONTEND (√∫ltimas 30 l√≠neas):"
echo "--------------------------------------------"
docker logs frontend --tail 30
echo ""

# 3. Verificar si el problema es de dependencias
echo "üìã 3. VERIFICANDO DEPENDENCIAS EN EL CONTENEDOR:"
echo "-----------------------------------------------"
echo "Verificando si ag-grid est√° instalado:"
docker exec frontend npm list ag-grid-community ag-grid-react 2>/dev/null || echo "‚ùå No se puede verificar dependencias"
echo ""

# 4. Verificar el build de producci√≥n
echo "üìã 4. VERIFICANDO BUILD DE PRODUCCI√ìN:"
echo "-------------------------------------"
echo "Verificando archivos en /usr/share/nginx/html:"
docker exec frontend ls -la /usr/share/nginx/html/ 2>/dev/null || echo "‚ùå No se puede acceder al directorio"
echo ""

# 5. Verificar configuraci√≥n de nginx
echo "üìã 5. VERIFICANDO CONFIGURACI√ìN DE NGINX:"
echo "----------------------------------------"
echo "Configuraci√≥n de nginx:"
docker exec frontend cat /etc/nginx/conf.d/default.conf 2>/dev/null || echo "‚ùå No se puede leer configuraci√≥n de nginx"
echo ""

# 6. Verificar logs de nginx
echo "üìã 6. LOGS DE NGINX:"
echo "-------------------"
echo "Error logs:"
docker exec frontend tail -10 /var/log/nginx/error.log 2>/dev/null || echo "‚ùå No se puede acceder a error.log"
echo ""

echo "Access logs:"
docker exec frontend tail -10 /var/log/nginx/access.log 2>/dev/null || echo "‚ùå No se puede acceder a access.log"
echo ""

# 7. Verificar si el problema es de cache
echo "üìã 7. VERIFICANDO CACHE Y BUILD:"
echo "-------------------------------"
echo "Verificando si hay problemas de cache en el build..."
echo ""

# 8. Soluciones propuestas
echo "üîß SOLUCIONES PROPUESTAS:"
echo "========================"
echo ""
echo "1. üöÄ REBUILD COMPLETO DEL FRONTEND:"
echo "   docker-compose down frontend"
echo "   docker-compose build --no-cache frontend"
echo "   docker-compose up -d frontend"
echo ""
echo "2. üîÑ REBUILD CON LIMPIEZA DE CACHE:"
echo "   docker system prune -f"
echo "   docker volume prune -f"
echo "   docker-compose build --no-cache frontend"
echo "   docker-compose up -d frontend"
echo ""
echo "3. üì¶ VERIFICAR DEPENDENCIAS:"
echo "   docker exec frontend npm list ag-grid-community"
echo "   docker exec frontend npm list ag-grid-react"
echo ""
echo "4. üîç VERIFICAR CONFIGURACI√ìN DE AG GRID:"
echo "   - Revisar que agGridConfig.js se est√© importando correctamente"
echo "   - Verificar que ModuleRegistry.registerModules se ejecute antes del render"
echo "   - Comprobar que las versiones de ag-grid sean compatibles"
echo ""
echo "5. üåê VERIFICAR ACCESO AL FRONTEND:"
echo "   curl -I http://localhost:3000"
echo "   curl -I http://frontend:3000"
echo ""

# 9. Verificar configuraci√≥n espec√≠fica de AG Grid
echo "üìã 8. VERIFICACI√ìN ESPEC√çFICA DE AG GRID:"
echo "----------------------------------------"
echo "Verificando si el archivo de configuraci√≥n existe en el build:"
docker exec frontend find /usr/share/nginx/html -name "*.js" -exec grep -l "ag-grid" {} \; 2>/dev/null || echo "‚ùå No se encontraron archivos con ag-grid"
echo ""

# 10. Comandos de reparaci√≥n autom√°tica
echo "üîß COMANDOS DE REPARACI√ìN AUTOM√ÅTICA:"
echo "===================================="
echo ""
echo "¬øDeseas ejecutar la reparaci√≥n autom√°tica? (y/N)"
read -r response
if [[ "$response" =~ ^[Yy]$ ]]; then
    echo "üöÄ Ejecutando reparaci√≥n autom√°tica..."
    echo ""
    
    echo "1. Deteniendo contenedor frontend..."
    docker-compose down frontend
    
    echo "2. Limpiando cache de Docker..."
    docker system prune -f
    
    echo "3. Rebuild sin cache..."
    docker-compose build --no-cache frontend
    
    echo "4. Iniciando frontend..."
    docker-compose up -d frontend
    
    echo "5. Esperando que el contenedor est√© listo..."
    sleep 10
    
    echo "6. Verificando logs..."
    docker logs frontend --tail 20
    
    echo ""
    echo "‚úÖ Reparaci√≥n autom√°tica completada"
    echo "Verifica si el problema de AG Grid se resolvi√≥"
else
    echo "‚ùå Reparaci√≥n autom√°tica cancelada"
    echo "Ejecuta los comandos manualmente seg√∫n las soluciones propuestas"
fi

echo ""
echo "üéØ PR√ìXIMOS PASOS:"
echo "=================="
echo "1. Si el problema persiste, verifica la configuraci√≥n del proxy manager"
echo "2. Revisa que el dominio apunte correctamente al frontend"
echo "3. Verifica que no haya problemas de CORS o configuraci√≥n de red"
echo "4. Considera usar el modo de desarrollo temporalmente para debugging"
echo ""
echo "üìû Para debugging adicional:"
echo "- Revisa la consola del navegador en el servidor EC2"
echo "- Verifica los logs de nginx en tiempo real"
echo "- Comprueba que el build incluya todas las dependencias necesarias"
